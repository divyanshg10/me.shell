{"version":3,"sources":["components/Blinker.js","components/TextareaInput.js","helpers/tree.js","components/Typer.js","helpers/constants.js","App.js","serviceWorker.js","index.js"],"names":["style","backgroundColor","color","className","TextArea","props","state","value","inputKeyPressed","bind","event","isPrintable","test","key","prev","this","setState","preventDefault","substring","length","onEnterPressed","document","addEventListener","removeEventListener","type","size","readOnly","React","Component","Node","parent","children","setParentNode","node","getParentNode","addChild","getChildren","traverse","current","root","argument","argArray","split","index","err","len","childArray","i","TypeComponent","innerHTML","timeoutHandler","undefined","timeoutHandler1","update","printText","str","time","setTimeout","removeTimeouts","stringToBePrinted","timestep","clearTimeout","prevProps","dangerouslySetInnerHTML","__html","help","projects","personalInfo","education","socialMediaHandles","App","topre","pwd","changeState","stack","push","pop","Tree","ls","obj","forEach","element","includes","cat","constants","cd","output","enterPressed","about","personal","social","makeTree","code","command","trim","execute","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.deb9521e.chunk.js","sourcesContent":["import React from 'react';\nimport \"../styles/Blinker.css\";\nexport default ({color})=>{\n    const style={\n        backgroundColor:color,\n    }\n    return(\n        <span className=\"cursor\" style={style}>&nbsp;&nbsp;</span>\n    )\n}","import React from \"react\";\nimport Blinker from \"./Blinker\";\nimport \"../styles/TextareaInput.css\";\nimport \"../styles/shadow.css\";\n\nexport default class TextArea extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            value:\"\",\n        };\n        this.inputKeyPressed=this.inputKeyPressed.bind(this);\n    }\n    inputKeyPressed(event){\n        var isPrintable=/^[a-z0-9!\"#$%&'()*+,.\\/:;<=>?@\\[\\]^_`{|}~-]$/i.test(event.key);\n        var prev=this.state.value;\n        var value;\n        if(isPrintable){\n            value=prev+event.key;\n            this.setState({value});\n        }else if(event.key===' '){\n            event.preventDefault();\n            value=prev+' ';\n            this.setState({value});\n        }\n        else if(event.key===\"Backspace\"){\n            value=prev.substring(0,prev.length-1);\n            this.setState({value});\n        }else if(event.key===\"Enter\"){\n            this.props.onEnterPressed(this.state.value);\n            this.setState({value:\"\"});\n        }\n    }\n\n\n    componentDidMount(){\n        document.addEventListener(\"keydown\",this.inputKeyPressed,false);\n    }\n    componentWillMount(){\n        document.removeEventListener(\"keydown\",this.inputKeyPressed,false);\n    }\n\n   \n\n    render(){\n        return (\n            <div className=\"command-input shadow\">\n                <span>&gt;&nbsp;</span>\n                {this.state.value.length>0 && <input type=\"text\" className=\"inputBox\" value={this.state.value} size={this.state.value.length}  readOnly />}\n                <Blinker color=\"green\"/>\n            </div>\n        );\n    }\n}","function Node(value){\n    this.value = value;\n    this.parent = null;\n    this.children = [];\n\n    this.setParentNode = function(node) {\n        this.parent = node;\n    }\n\n    this.getParentNode = function() {\n        return this.parent;\n    }\n\n    this.addChild = function(node) {\n        node.setParentNode(this);\n        this.children[this.children.length] = node;\n    }\n\n    this.getChildren = function() {\n        return this.children;\n    }\n\n}\n\nconst traverse = (current,root,argument)=>{\n    if(argument[argument.length-1]==='/'){\n        argument = argument.substring(0,argument.length-1);\n    }\n    let argArray=argument.split(\"/\");\n    let index=0;\n    let err=\"\";\n    let len=argArray.length;\n    if(argArray[0]==='root.dir'){\n        current=root;\n        index=1;\n    }\n    while(index<len){\n        if(argArray[index]==='.'){\n            index++;\n            continue;\n        }else if(argArray[index]==='..'){\n            current=current.getParentNode();\n            if(current===null){\n                err=\"Invalid path.\";\n                break;\n            }\n        }else{\n            let childArray=current.getChildren();\n            let i;\n            for(i=0;i<childArray.length;i++){\n                if(childArray[i].value===argArray[index]){\n                    current=childArray[i];\n                    break;\n                }\n            }\n            if(i===childArray.length){\n                err=\"Invalid path.\"\n                break;\n            }\n        }\n        index++;\n    }\n    return {\n        current,\n        err\n    }\n}\n\nexport default ()=>{\n    let root = new Node(\"root.dir\");\n    let about = new Node(\"about.dir\");\n    let projects = new Node(\"projects.file\");\n    let personal = new Node(\"personalInfo.file\");\n    let education = new Node(\"education.file\")\n    let social = new Node(\"socialMediaHandles.file\");\n\n    social.setParentNode(about);\n    education.setParentNode(about);\n    personal.setParentNode(about);\n    projects.setParentNode(root);\n    about.setParentNode(root);\n    about.addChild(personal);\n    about.addChild(education);\n    about.addChild(social);\n    root.addChild(about);\n    root.addChild(projects);\n    return root;\n}\n\nexport const pwd = (node)=>{\n    const stack=[];\n    while(node!==null){\n        stack.push(node);\n        node=node.getParentNode();\n    }\n    let str=stack[stack.length-1].value;\n    stack.pop();\n    while(stack.length!==0){\n        str+='/'+stack[stack.length-1].value;\n        stack.pop();\n    }\n    return str;\n}\n\nexport const cd = (current,root,argument)=>{\n    let obj = traverse(current,root,argument);\n    if(obj.err===\"\" && obj.current.value.includes(\"file\")){\n        obj.err = \"Not a directory.\";\n    }\n    return obj;\n}\n\nexport const ls = (current,root,argument)=>{\n    let str=\"\";\n    let err=\"\";\n    if(argument===''){\n        current.getChildren().forEach(element => {\n            str+=element.value+\"\\n\";\n        });\n    }else{\n        let obj = traverse(current,root,argument);\n        if(obj.err!==\"\"){\n            err=obj.err;\n        }else if(obj.current.value.includes(\".file\")){\n            err=\"Not a directory.\";\n        }else{\n            obj.current.getChildren().forEach(element=>{\n                str+=element.value+\"\\n\";\n            });\n        }\n    }\n    return {\n        err,str,\n    }\n}\n\nexport const cat = (current,root,argument)=>{\n    let obj = traverse(current,root,argument);\n    if(obj.err===\"\" && obj.current.value.includes(\"dir\")){\n        obj.err = \"Not a file.\";\n    }\n    return obj;\n}\n","import React from \"react\";\n\nexport default class TypeComponent extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            innerHTML:``,\n        }\n        this.timeoutHandler=undefined;\n        this.timeoutHandler1=undefined;\n        this.update=this.update.bind(this);\n        this.printText=this.printText.bind(this);\n    }\n\n    printText(str,index,time){\n        if(index>=this.length)\n            return;\n        let innerHTML=this.state.innerHTML;\n        innerHTML+=str[index];\n        this.setState({innerHTML});\n        this.timeoutHandler=setTimeout(()=>{this.printText(str,index+1,time)},time);\n        this.removeTimeouts=this.removeTimeouts.bind(this);\n    }\n\n    update(){\n        this.length=this.props.stringToBePrinted.length;\n        this.printText(this.props.stringToBePrinted,0,this.props.timestep);\n        // this.setState({innerHTML:this.props.stringToBePrinted});\n    }\n\n    componentDidMount(){\n        this.update();\n    }\n\n    removeTimeouts(){\n        if(this.timeoutHandler){\n            clearTimeout(this.timeoutHandler);\n        }\n        if(this.timeoutHandler1){\n            clearTimeout(this.timeoutHandler1);\n        }\n    }\n\n    componentWillUnmount(){\n        this.removeTimeouts();\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.stringToBePrinted!==this.props.stringToBePrinted){\n            this.setState({innerHTML:``});\n            this.removeTimeouts();\n            this.timeoutHandler1=setTimeout(()=>this.update(),200);\n        }\n    }\n\n    render(){\n        return (\n        <div className={this.props.className} \n         dangerouslySetInnerHTML={{__html : this.state.innerHTML}}>\n        </div>\n        );\n        // let str=\"<pre><span>hello hi</span><a>bye</a></pre>\";\n        // return (\n        //     <div dangerouslySetInnerHTML={{__html:str}}></div>\n        // );\n    }\n\n}","export const help= `<pre>Only following commands are accepted : \n    pwd : for knowing the present working directory\n    ls [path]: for listing files and directories\n    cd path: for changing directory\n    cat filename : to display the file\n    help : for details regarding valid commands</pre>`;\n\n\nexport const projects = `<pre>You can view all my projects <a href=\"https://github.com/divyanshg10?tab=repositories\">here</a><pre>`;\n\nexport const personalInfo =`<pre>My name is Divyansh Gupta.\nMy hometown is Agra.\nCurrently, I am pursueing B.Tech. in computer science\nfrom National Institute of Technology, Patna<pre>`;\n\nexport const education =`<pre>Currently pursueing B.tech. in CS from NIT Patna.\nI will be graduating in mid 2022.\nI did my 10<sup>th</sup> and 12<sup>th</sup> from <a href=\"https://standrewsschoolagra.com\">St Andrews School</a>,\nAgra with 10 C.G.P.A. and 98.2% respectively.</pre>`;\n\nexport const socialMediaHandles =`<pre>Linkedin : <a href=\"https://www.linkedin.com/in/divyansh-gupta-248621195/\">Divyansh Gupta</a>\nInstagram : <a href=\"https://www.instagram.com/divyanshg10/\">divyanshg10</a>\nSorry, not on facebook.</pre>`;\n","import React from 'react';\nimport './App.css';\nimport Textarea from \"./components/TextareaInput\";\nimport makeTree,* as Tree from \"./helpers/tree\";\nimport Typer from \"./components/Typer\";\nimport \"./styles/shadow.css\";\nimport * as constants from \"./helpers/constants\";\n\nclass  App extends React.Component{\n    constructor(){\n      super();\n      this.state={\n        output:<div></div>,\n      }\n      this.enterPressed=this.enterPressed.bind(this);\n      this.changeState=this.changeState.bind(this);\n      this.pwd=this.pwd.bind(this);\n      this.cd=this.cd.bind(this);\n      this.ls=this.ls.bind(this);\n      this.cat=this.cat.bind(this);\n      this.help=this.help.bind(this);\n      this.root = makeTree();\n      this.current=this.root;\n      // console.log(this.current);\n    }\n\n    topre=str=>'<pre>'+str+'</pre>'\n\n    pwd=(argument)=>{\n      if(argument!==''){\n        this.changeState(\"Invalid command, no argument required.\");\n      }else{\n        this.changeState(Tree.pwd(this.current));\n      }\n    }\n\n    ls=(argument)=>{\n      const obj = Tree.ls(this.current,this.root,argument);\n      if(obj.err===\"\"){\n        this.changeState(this.topre(obj.str));\n      }else{\n        this.changeState(obj.err);\n      }\n    }\n\n    cat=(argument)=>{\n      if(argument===\"\"){\n        this.changeState(\"Invalid command, argument required.\");\n      }else{\n        let obj = Tree.cat(this.current,this.root,argument);\n        if(obj.err!==\"\"){\n          this.changeState(obj.err);\n        }else{\n          const str = obj.current.value;\n          this.changeState(constants[str.substring(0,str.length-5)]);\n        }\n      }\n    }\n\n    cd=(argument)=>{\n      if(argument===''){\n        this.changeState(\"Invalid command, argument required.\");\n      }else{\n        let obj = Tree.cd(this.current,this.root,argument);\n        if(obj.err!==''){\n          this.changeState(obj.err);\n        }else{\n          this.current=obj.current;\n          this.changeState(\"Present working directory changed.\");\n        }\n      }\n    }\n\n    help=(argument)=>{\n      this.changeState(constants.help);\n    }\n\n    execute(code,argument){\n      switch(code){\n        case \"pwd\" : this.pwd(argument);break;\n        case \"ls\" : this.ls(argument);break;\n        case \"cat\" : this.cat(argument);break;\n        case \"cd\" : this.cd(argument);break;\n        case \"help\" : this.help(argument);break;\n        default:break;\n      }\n    }\n\n    enterPressed(command){\n      command = command.trim();\n      let code = \"\";\n      let argument = \"\";\n      let i;\n      for(i=0;i<command.length;i++){\n        if(command[i]===' ')\n          break;\n        code+=command[i];\n      }\n      for(;i<command.length;i++){\n        if(command[i]!==' '){\n          break;\n        }\n      }\n      for(;i<command.length;i++){\n        if(command[i]===' ')\n          break;\n        argument+=command[i];\n      }\n      this.execute(code,argument);\n    }\n\n    changeState(output){\n      this.setState({output});\n    }\n\n    componentDidMount(){\n      this.changeState(constants.help);\n    }\n\n    render(){\n      return (\n        <div className=\"App\">\n          <Textarea onEnterPressed={this.enterPressed}/>\n          <div className=\"command-output shadow\">\n             <Typer \n              className=\"outputText\"\n              stringToBePrinted={this.state.output}\n              timestep={10}\n             />\n          </div>\n        </div>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}